<%- include("../partials/user/cartHeader") %>
<body>
  <div class="container mt-5">
    <div class="container mt-5">
      <div class="p-4 border rounded shadow-sm mb-4 bg-light">
        <h3 class="mb-3 text-primary fw-bold">Choose a Retry Payment Method</h3>
        <div class="row">
          <div class="col-md-6 mb-2">
            <h5 class="text-dark">
              <strong>Order ID:</strong>
              <span class="text-muted"><%= order.orderId %></span>
            </h5>
          </div>
          <div class="col-md-6 mb-2">
            <h5 class="text-dark">
              <strong>Amount Payable:</strong>
              <span class="text-success fw-semibold"
                >₹<%= order.finalAmount.toFixed(2) %></span
              >
            </h5>
          </div>
        </div>
      </div>
    </div>

    <div class="row">
      <!-- Wallet Payment Option -->
      <div class="col-md-4 mb-4">
        <div class="card h-100">
          <div class="card-body text-center">
            <h5 class="card-title">Wallet</h5>
            <p class="card-text">Pay using your wallet balance.</p>
            <button
              class="btn btn-primary"
              data-bs-toggle="modal"
              data-bs-target="#walletPaymentModal"
            >
              Pay with Wallet
            </button>
          </div>
        </div>
      </div>

      <!-- Cash on Delivery Option -->
      <div class="col-md-4 mb-4">
        <div class="card h-100">
          <div class="card-body text-center">
            <h5 class="card-title">Cash on Delivery</h5>
            <p class="card-text">Pay in cash upon delivery.</p>
            <button
              class="btn btn-warning"
              id="codPaymentBtn"
              data-order-id="<%= order.orderId %>"
            >
              Place Order
            </button>
          </div>
        </div>
      </div>

      <!-- Razorpay Option -->
      <div class="col-md-4 mb-4">
        <div class="card h-100">
          <div class="card-body text-center">
            <h5 class="card-title">Razorpay</h5>
            <p class="card-text">Pay securely using Razorpay.</p>
            <button
              type="button"
              class="btn btn-dark"
              id="razorpayPaymentBtn"
              data-order-id="<%= order.orderId %>"
            >
              Pay with Razorpay
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Wallet Payment Modal -->
  <div
    class="modal fade"
    id="walletPaymentModal"
    tabindex="-1"
    aria-labelledby="walletPaymentModalLabel"
    aria-hidden="true"
  >
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="walletPaymentModalLabel">
            Wallet Payment
          </h5>
          <button
            type="button"
            class="btn-close"
            data-bs-dismiss="modal"
            aria-label="Close"
          ></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            <h6>
              Available Balance: ₹<span id="walletBalance"
                ><%=wallet.balance%></span
              >
            </h6>
            <h6>
              Payable Amount: ₹<span id="payableAmount"
                ><%=order.finalAmount%></span
              >
            </h6>
          </div>
          <div id="insufficientFunds" style="display: none">
            <div class="alert alert-warning">
              Insufficient funds in wallet. Please add money to continue.
            </div>
            <a href="/wallet" class="btn btn-primary"> Add Money </a>
          </div>
        </div>
        <div class="modal-footer">
          <button
            type="button"
            class="btn btn-secondary"
            data-bs-dismiss="modal"
          >
            Close
          </button>

          <button
            type="button"
            class="btn btn-primary"
            id="confirmWalletPayment"
            data-order-id="<%= order.orderId %>"
          >
            Pay Now
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Scripts -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

  <script>
    const modal = document.getElementById("walletPaymentModal");
    modal.addEventListener("shown.bs.modal", () => {
      const balance = parseFloat(
        document.getElementById("walletBalance").textContent
      );
      const payable = parseFloat(
        document.getElementById("payableAmount").textContent
      );
      const insufficient = document.getElementById("insufficientFunds");
      const confirmBtn = document.getElementById("confirmWalletPayment");

      if (balance < payable) {
        insufficient.style.display = "block";
        confirmBtn.disabled = true;
      } else {
        insufficient.style.display = "none";
        confirmBtn.disabled = false;
      }
    });

    //cod payment

    document
      .getElementById("codPaymentBtn")
      .addEventListener("click", async function () {
        const orderId = this.dataset.orderId;

        try {
          const res = await fetch(`/retryPayment/cod?orderId=${orderId}`, {
            method: "PUT",
            headers: {
              "Content-Type": "application/json",
            },
          });

          const data = await res.json();

          if (res.ok) {
            Swal.fire({
              icon: "success",
              title: "Payment Successfull",
              text: "Payment done with COD.",
              timer: 2000,
              showTimerProgressBar: true,
            }).then(() => {
              window.location.href = "/confirmation";
            });
          } else {
            Swal.fire({
              icon: "error",
              title: "Something went wrong",
              text: data.message || "Unable to process COD. Please try again.",
            });
          }
        } catch (err) {
          console.error(err);
          Swal.fire({
            icon: "error",
            title: "Network Error",
            text: "Please check your connection and try again.",
          });
        }
      });

    //wallet

    document
      .getElementById("confirmWalletPayment")
      .addEventListener("click", async function () {
        const orderId = this.dataset.orderId;

        try {
          const res = await fetch(`/retryPayment/wallet?orderId=${orderId}`, {
            method: "PUT",
            headers: {
              "Content-Type": "application/json",
            },
          });

          const data = await res.json();

          if (res.ok) {
            Swal.fire({
              icon: "success",
              title: "Payment Successful",
              text: "Wallet payment completed successfully!",
            }).then(() => {
              window.location.href = "/confirmation";
            });
          } else {
            Swal.fire({
              icon: "error",
              title: "Payment Failed",
              text: data.message || "Unable to complete wallet payment.",
            });
          }
        } catch (error) {
          console.error(error);
          Swal.fire({
            icon: "error",
            title: "Network Error",
            text: "Please check your internet connection and try again.",
          });
        }
      });




      //Razorpay

      document.getElementById("razorpayPaymentBtn").addEventListener("click", async function () {
        const orderId = this.dataset.orderId;  
      console.log("hiiiiiiiiiiiiiiiiiiii");
      
        const response = await fetch('/retryPayment/online', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      orderId
    }),
  });

  const order = await response.json();

  const options = {
    key: "<%= process.env.RAZORPAY_KEY_ID %>",
    amount: order.amount,
    currency: "INR",
    name: "Tyrex",
    description: "Order Payment",
    order_id: order.id,
    handler: async function (response) {
      // Payment successful
      const verifyRes = await fetch("/retryPayment/verifyPayment", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          razorpay_order_id: response.razorpay_order_id,
          razorpay_payment_id: response.razorpay_payment_id,
          razorpay_signature: response.razorpay_signature,
          amount: order.amount,
        }),
      });

      const result = await verifyRes.json();
      if (result.success) {
        Swal.fire({
          title: "Success!",
          text: "Payment Successful!",
          icon: "success",
          timer: 1500,
          timerProgressBar: true,
        }).then(() => {
          window.location.href = "/confirmation";
        });
      } else {
        window.location.href = `/paymentFailure?orderId=${order.orderId}`;
      }
    },
    prefill: {
      email: "<%= user.email %>",
      contact: "<%= user.phone %>",
    },
    theme: { color: "#3399cc" },
    modal: {
      ondismiss: function () {
        // User closed modal without paying
        window.location.href = `/paymentFailure?orderId=${order.id}`;
      },
    },
  };

  const paymentObject = new Razorpay(options);

  // Handle failed payments
  paymentObject.on("payment.failed", async function (response) {
    // Update order status to failed
    await fetch("/order/verifyPayment", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        razorpay_order_id: response.error.metadata.order_id,
        razorpay_payment_id: response.error.metadata.payment_id,
        razorpay_signature: "", // No signature in case of failure
        amount: order.amount,
      }),
    });
    
    window.location.href = `/paymentFailure?orderId=${order.id}`;
  });

  paymentObject.open();
});




  </script>



  <%- include("../../views/partials/user/footer") %>
</body>
