<%- include("../partials/admin/header") %>

<style>
    :root {
       --primary-color: #1e90ff;
       --secondary-color: #2d3436;
       --success-color: #00b894;
       --danger-color: #d63031;
       --info-color: #0984e3;
       --light-gray: #dfe6e9;
       --background-color: #f5f6fa;
       --white: #ffffff;
       --shadow: 0 10px 20px rgba(0, 0, 0, 0.05);
       --transition: all 0.3s ease;
     }
     
     .order-table th, .order-table td {
         vertical-align: middle;
     }
     
     .status-badge {
         padding: 6px 12px;
         border-radius: 15px;
         font-weight: 500;
     }
     
     .order-actions .btn {
         margin: 0 2px;
     }
     
     /* Enhanced responsive styles */
     .table-responsive {
         overflow-x: auto;
         -webkit-overflow-scrolling: touch;
     }
     
     /* Card view for mobile screens */
     .order-cards {
         display: none;
     }
     
     .order-card {
         background-color: var(--white);
         border-radius: 10px;
         box-shadow: var(--shadow);
         margin-bottom: 15px;
         padding: 15px;
        
     }
     
     .order-card-header {
         display: flex;
         justify-content: space-between;
         align-items: center;
         margin-bottom: 10px;
         padding-bottom: 10px;
         border-bottom: 1px solid var(--light-gray);
     }
     
     .order-card-body {
         display: grid;
         grid-template-columns: repeat(2, 1fr);
         grid-gap: 10px;
         margin-bottom: 15px;
     }
     
     .order-card-item {
         display: flex;
         flex-direction: column;
     }
     
     .order-card-label {
         font-size: 0.8rem;
         color: var(--secondary-color);
         margin-bottom: 5px;
         font-weight: 500;
     }
     
     .order-card-value {
         font-size: 1rem;
         font-weight: 600;
     }
     
     .order-card-actions {
         padding-top: 10px;
         border-top: 1px solid var(--light-gray);
     }
     
     /* Media queries */
     @media screen and (max-width: 991px) {
         .filter-row > div {
             margin-bottom: 10px;
         }
     }
     
     @media screen and (max-width: 767px) {
         .table-view {
             display: none; /* Hide table on mobile */
         }
         
         .order-cards {
             display: block; /* Show cards on mobile */
         }
         
         .action-buttons {
             display: flex;
             flex-direction: column;
             gap: 8px;
         }
     }
 </style>
 
 <div class="container-fluid px-4">
     <h1 class="mt-4">Order Management</h1>
     <form method="GET" action="/admin/orders" class="mb-4 p-3 bg-light rounded shadow-sm">
         <div class="row g-2 align-items-center filter-row">
             <!-- Search Input -->
             <div class="col-lg-4 col-md-6 col-sm-12">
                 <div class="input-group">
                     <input type="text" name="search" class="form-control border-primary" placeholder="Search Order ID..." value="<%= search %>">
                     <button type="submit" name="action" value="search" class="btn btn-primary">Search</button>
                 </div>
             </div>
     
             <!-- Status Filter -->
             <div class="col-lg-3 col-md-6 col-sm-12">
                 <select name="status" class="form-select border-primary custom-select">
                     <option value="all" <%= status === 'all' ? 'selected' : '' %>>All Status</option>
                     <option value="returned" <%= status === 'Returned' ? 'selected' : '' %>>Returned</option>
                     <option value="Processing" <%= status === 'Processing' ? 'selected' : '' %>>Processing</option>
                     <option value="shipped" <%= status === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                     <option value="delivered" <%= status === 'delivered' ? 'selected' : '' %>>Delivered</option>
                     <option value="cancelled" <%= status === 'cancelled' ? 'selected' : '' %>>Cancelled</option>
                 </select>
             </div>
     
             <!-- Sorting Options -->
             <div class="col-lg-2 col-md-4 col-sm-6">
                 <select name="sortField" class="form-select border-primary custom-select">
                     <option value="createdAt" <%= sortField === 'createdAt' ? 'selected' : '' %>>Date</option>
                     <option value="finalAmount" <%= sortField === 'finalAmount' ? 'selected' : '' %>>Price</option>
                 </select>
             </div>
             <div class="col-lg-2 col-md-4 col-sm-6">
                 <select name="sortOrder" class="form-select border-primary custom-select">
                     <option value="desc" <%= sortOrder === -1 ? 'selected' : '' %>>Descending</option>
                     <option value="asc" <%= sortOrder === 1 ? 'selected' : '' %>>Ascending</option>
                 </select>
             </div>
     
             <!-- Filter and Clear Buttons -->
             <div class="col-lg-1 col-md-2 col-sm-6 d-grid px-1">
                 <button type="submit" class="btn btn-success">Filter</button>
             </div>
             <div class="col-lg-1 col-md-2 col-sm-6 d-grid px-1">
                 <button type="button" class="btn btn-secondary" onclick="clearFilters()">Clear</button>
             </div>
         </div>
     </form>
     
     <script>
         function clearFilters() {
             window.location.href = "/admin/orders";
         }
     </script>
     
     <style>
         .custom-select {
             background-color: #fff;
             color: #333;
             padding: 8px;
             border-radius: 8px;
             transition: all 0.3s ease-in-out;
         }
         
         .custom-select:focus {
             box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
             border-color: #007bff;
         }
     
         .form-control {
             border-radius: 8px;
         }
     
         .btn {
             border-radius: 8px;
         }
     
         .form-control:focus, .custom-select:focus {
             outline: none;
         }
     
         .input-group .btn {
             border-top-left-radius: 0;
             border-bottom-left-radius: 0;
         }
        
         .status-badge {
             font-weight: 700 !important;
             font-size: 0.95rem;
             letter-spacing: 0.4px;
         }
         
         .text-true-black {
             color: #000000 !important;
         }
     </style>
     
     <!-- Table View (Desktop) -->
     <div class="card mb-4 table-view">
         <div class="card-header">
             <i class="fas fa-table me-1"></i>
             All Orders
         </div>
         <div class="card-body">
             <div class="table-responsive">
                 <table class="table table-striped order-table">
                     <thead class="text-center table-dark">
                         <tr>
                             <th>Order ID</th>
                             <th>Date</th>
                             <th>Customer</th>
                             <th>Amount</th>
                             <th>Status</th>
                             <th>Actions</th>
                         </tr>
                     </thead>
                     <tbody>
                         <% orders.forEach(order => { %>
                             <tr class="align-middle">
                                 <td><%= order.orderId %></td>
                                 <td><%= new Date(order.createdAt).toLocaleDateString() %></td>
                                 <td>
                                     <div>
                                         <strong><%= order.userId.name %></strong>
                                     </div>
                                 </td>
                                 <td>â‚¹<%= Math.round(order.finalAmount) %></td>
                                 <td>
                                     <div>
                                         <span class="status-badge d-inline-block px-3 py-1 rounded text-uppercase 
                                             <%= order.status === 'delivered' ? 'bg-success text-white' :
                                                  order.status === 'cancelled' ? 'bg-danger text-white' :
                                                  order.status === 'shipped' ? 'bg-info text-true-black' :
                                                  order.status === 'return requested' ? 'bg-warning text-true-black' :
                                                  order.status === 'returning' ? 'bg-info text-true-black' :
                                                  order.status === 'returned' ? 'bg-secondary text-white' :
                                                  'bg-warning text-true-black' %>">
                                             <%= order.status %>
                                         </span>
                                     </div>
                                 </td>
                                 <td class="text-center p-3">
                                     <!-- View Details Button -->
                                     <a href="/admin/adminOrders/<%= order._id %>" class="btn btn-primary btn-sm" style="display: flex; align-items: center; justify-content: center; width: 100%; margin-bottom: 10px;">
                                         <i class="fas fa-eye" style="margin-right: 8px; color: white;"></i>
                                         <span style="color: white;">View Details</span>
                                     </a>
                                     
                                     <!-- Return Request Controls -->
                                     <% if (order.status === 'return requested' && order.requestStatus === 'pending') { %>
                                         <div class="action-buttons" style="display: flex; flex-direction: column; width: 100%; gap: 8px; margin-top: 10px;">
                                             <button onclick="handleReturn('approved', '<%= order._id %>')" 
                                                     class="btn btn-success btn-sm" style="display: flex; align-items: center; justify-content: center;">
                                                 <i class="fas fa-check-circle" style="margin-right: 8px; color: white;"></i>
                                                 <span style="color: white;">Approve Return</span>
                                             </button>
                                             <button onclick="handleReturn('rejected', '<%= order._id %>')" 
                                                     class="btn btn-danger btn-sm" style="display: flex; align-items: center; justify-content: center;">
                                                 <i class="fas fa-times-circle" style="margin-right: 8px; color: white;"></i>
                                                 <span style="color: white;">Reject</span>
                                             </button>
                                         </div>
                                     <% } else if (order.requestStatus === 'approved' && order.status != 'returned') { %>
                                         <button onclick="updateReturnStatus('<%= order._id %>')" 
                                                 class="btn btn-info btn-sm" style="display: flex; align-items: center; justify-content: center; width: 100%; margin-top: 10px;">
                                             <i class="fas fa-truck-loading" style="margin-right: 8px; color: white;"></i>
                                             <span style="color: white;">Update Return Status</span>
                                         </button>
                                     <% } else if (!['cancelled', 'delivered', 'returned', 'return requested', 'returning'].includes(order.status)) { %>
                                         <div class="action-buttons" style="display: flex; flex-direction: column; width: 100%; gap: 8px; margin-top: 10px;">
                                            <%if(order.paymentStatus ==='Success'){%>
                                             <button onclick="updateStatus('<%= order._id %>')" 
                                                     class="btn btn-info btn-sm" style="display: flex; align-items: center; justify-content: center;">
                                                 <i class="fas fa-sync-alt" style="margin-right: 8px; color: white;"></i>
                                                 <span style="color: white;">Update Status</span>
                                             </button>
                                             <%}%>
                                             <button onclick="cancelOrder('<%= order._id %>')" 
                                                     class="btn btn-danger btn-sm" style="display: flex; align-items: center; justify-content: center;">
                                                 <i class="fas fa-ban" style="margin-right: 8px; color: white;"></i>
                                                 <span style="color: white;">Cancel</span>
                                             </button>
                                         </div>
                                     <% } %>
                                 </td>
                             </tr>
                         <% }); %>
                     </tbody>
                 </table>
             </div>
         </div>
     </div>
     
     <!-- Card View (Mobile) -->
     <div class="order-cards">
         <div class="card-header bg-dark text-white mb-3 rounded">
             <i class="fas fa-table me-1"></i>
             All Orders
         </div>
         
         <% orders.forEach(order => { %>
             <div class="order-card">
                 <div class="order-card-header">
                     <div>
                         <div class="fw-bold">#<%= order.orderId %></div>
                     </div>
                     <div>
                         <span class="status-badge d-inline-block px-3 py-1 rounded text-uppercase 
                             <%= order.status === 'delivered' ? 'bg-success text-white' :
                                  order.status === 'cancelled' ? 'bg-danger text-white' :
                                  order.status === 'shipped' ? 'bg-info text-true-black' :
                                  order.status === 'return requested' ? 'bg-warning text-true-black' :
                                  order.status === 'returning' ? 'bg-info text-true-black' :
                                  order.status === 'returned' ? 'bg-secondary text-white' :
                                  'bg-warning text-true-black' %>">
                             <%= order.status %>
                         </span>
                     </div>
                 </div>
                 
                 <div class="order-card-body">
                     <div class="order-card-item">
                         <div class="order-card-label">Customer</div>
                         <div class="order-card-value"><%= order.userId.name %></div>
                     </div>
                     
                     <div class="order-card-item">
                         <div class="order-card-label">Amount</div>
                         <div class="order-card-value">â‚¹<%= Math.round(order.finalAmount) %></div>
                     </div>
                     
                     <div class="order-card-item">
                         <div class="order-card-label">Date</div>
                         <div class="order-card-value"><%= new Date(order.createdAt).toLocaleDateString() %></div>
                     </div>
                 </div>
                 
                 <div class="order-card-actions">
                     <!-- View Details Button -->
                     <a href="/admin/adminOrders/<%= order._id %>" class="btn btn-primary btn-sm d-flex align-items-center justify-content-center mb-2">
                         <i class="fas fa-eye me-2"></i>
                         <span>View Details</span>
                     </a>
                     
                     <!-- Return Request Controls -->
                     <% if (order.status === 'return requested' && order.requestStatus === 'pending') { %>
                         <div class="d-flex flex-column gap-2 mt-2">
                             <button onclick="handleReturn('approved', '<%= order._id %>')" 
                                     class="btn btn-success btn-sm d-flex align-items-center justify-content-center">
                                 <i class="fas fa-check-circle me-2"></i>
                                 <span>Approve Return</span>
                             </button>
                             <button onclick="handleReturn('rejected', '<%= order._id %>')" 
                                     class="btn btn-danger btn-sm d-flex align-items-center justify-content-center">
                                 <i class="fas fa-times-circle me-2"></i>
                                 <span>Reject</span>
                             </button>
                         </div>
                     <% } else if (order.requestStatus === 'approved' && order.status != 'returned') { %>
                         <button onclick="updateReturnStatus('<%= order._id %>')" 
                                 class="btn btn-info btn-sm d-flex align-items-center justify-content-center mt-2">
                             <i class="fas fa-truck-loading me-2"></i>
                             <span>Update Return Status</span>
                         </button>
                     <% } else if (!['cancelled', 'delivered', 'returned', 'return requested', 'returning'].includes(order.status)) { %>
                       
                         <div class="d-flex flex-column gap-2 mt-2">
                             <button onclick="updateStatus('<%= order._id %>')" 
                                     class="btn btn-info btn-sm d-flex align-items-center justify-content-center">
                                 <i class="fas fa-sync-alt me-2"></i>
                                 <span>Update Status</span>
                             </button>
                             <button onclick="cancelOrder('<%= order._id %>')" 
                                     class="btn btn-danger btn-sm d-flex align-items-center justify-content-center">
                                 <i class="fas fa-ban me-2"></i>
                                 <span>Cancel</span>
                             </button>
                         </div>
                         
                     <% } %>
                 </div>
             </div>
         <% }); %>
     </div>
     
     <div class="pagination-container d-flex justify-content-center mt-4 mb-4">
        <nav aria-label="Page navigation">
          <ul class="pagination pagination-sm flex-wrap">
            <% if (currentPage > 1) { %>
            <li class="page-item">
              <a href="?page=<%= currentPage - 1 %>" class="page-link">&laquo; Previous</a>
            </li>
            <% } %>
            
            <% /* Always show first page */ %>
            <li class="page-item <%= currentPage === 1 ? 'active' : '' %>">
              <% if (currentPage === 1) { %>
                <span class="page-link">1</span>
              <% } else { %>
                <a class="page-link" href="?page=1">1</a>
              <% } %>
            </li>
            
            <% /* Show ellipsis after page 1 if necessary */ %>
            <% if (currentPage > 2 && totalPages > 3) { %>
              <li class="page-item disabled">
                <span class="page-link">...</span>
              </li>
            <% } %>
            
            <% /* Show current page if it's not 1 and not the last page */ %>
            <% if (currentPage !== 1 && currentPage !== totalPages) { %>
              <li class="page-item active">
                <span class="page-link"><%= currentPage %></span>
              </li>
            <% } else if (totalPages > 1 && currentPage !== 2) { %>
              <li class="page-item">
                <a class="page-link" href="?page=2">2</a>
              </li>
            <% } else if (totalPages > 1) { %>
              <li class="page-item active">
                <span class="page-link">2</span>
              </li>
            <% } %>
            
            <% /* Show ellipsis before last page if necessary */ %>
            <% if (currentPage < totalPages - 1 && totalPages > 3) { %>
              <li class="page-item disabled">
                <span class="page-link">...</span>
              </li>
            <% } %>
            
            <% /* Show last page if total pages > 1 */ %>
            <% if (totalPages > 1) { %>
              <li class="page-item <%= currentPage === totalPages ? 'active' : '' %>">
                <% if (currentPage === totalPages) { %>
                  <span class="page-link"><%= totalPages %></span>
                <% } else { %>
                  <a class="page-link" href="?page=<%= totalPages %>"><%= totalPages %></a>
                <% } %>
              </li>
            <% } %>
            
            <% if (currentPage < totalPages) { %>
            <li class="page-item">
              <a href="?page=<%= currentPage + 1 %>" class="page-link">Next &raquo;</a>
            </li>
            <% } %>
          </ul>
        </nav>
      </div>
 </div>

<!-- Rejection Modal -->
<div class="modal fade" id="rejectModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Reject Return Request</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">Rejection Category</label>
                    <select class="form-select" id="rejectionCategory" required>
                        <option value="">Select a category</option>
                        <option value="Invalid reason">Invalid reason</option>
                        <option value="Outside return window">Outside return window</option>
                        <option value="Product condition">Product condition</option>
                        <option value="Policy violation">Policy violation</option>
                        <option value="Other">Other</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label class="form-label">Detailed Explanation</label>
                    <textarea class="form-control" id="rejectionReason" rows="3" placeholder="Please provide a detailed explanation for rejecting the return request..." required></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="submitRejection()">Submit</button>
            </div>
        </div>
        
    </div>
    
</div>


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
let currentOrderId = null;

async function updateStatus(orderId) {
    const { value: status } = await Swal.fire({
        title: 'Update Order Status',
        input: 'select',
        inputOptions: {
            'Pending': 'Pending',
            'confirmed': 'Confirmed',
            'shipped': 'Shipped',
            'delivered': 'delivered'
        },
        inputPlaceholder: 'Select status',
        showCancelButton: true,
        inputValidator: (value) => {
            if (!value) {
                return 'You need to select a status!';
            }
        }
    });

    if (status) {
        try {
            const response = await fetch('/admin/updateStatus', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ orderId, status }),
            });

            const data = await response.json();
            
            if (data.success) {
                await Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: 'Order status updated successfully',
                    timer: 1500
                });
                location.reload();
            } else {
                throw new Error(data.message);
            }
        } catch (error) {
            console.error('Error:', error);
            await Swal.fire({
                icon: 'error',
                title: 'Error',
                text: error.message || 'Failed to update status'
            });
        }
    }
}

async function cancelOrder(orderId) {
    const result = await Swal.fire({
        title: 'Cancel Order',
        text: 'Are you sure you want to cancel this order?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, cancel it!'
    });

    if (result.isConfirmed) {
        try {
            const response = await fetch('/admin/orderCancel', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ orderId }),
            });

            const data = await response.json();
            
            if (data.success) {
                await Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: 'Order cancelled successfully',
                    timer: 1500
                });
                location.reload();
            } else {
                throw new Error(data.message);
            }
        } catch (error) {
            console.error('Error:', error);
            await Swal.fire({
                icon: 'error',
                title: 'Error',
                text: error.message || 'Failed to cancel order'
            });
        }
    }
}

async function handleReturn(action, orderId) {
    currentOrderId = orderId;
    
    if (action === 'rejected') {
        const modal = new bootstrap.Modal(document.getElementById('rejectModal'));
        modal.show();
        return;
    }

    if (action === 'approved') {
        Swal.fire({
            title: 'Are you sure?',
            text: "You are about to approve this return request!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, approve it!'
        }).then(async (result) => {
            if (result.isConfirmed) {
                try {
                    const response = await fetch('/admin/handleReturn', {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            orderId: orderId,
                            action: action
                        })
                    });

                    const data = await response.json();
                    
                    if (data.success) {
                        Swal.fire(
                            'Approved!',
                            'Return request has been approved.',
                            'success'
                        ).then(() => {
                            location.reload();
                        });
                    } else {
                        throw new Error(data.message);
                    }
                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire(
                        'Error!',
                        error.message || 'Failed to approve return request',
                        'error'
                    );
                }
            }
        });
    }
}

async function submitRejection() {
    const category = document.getElementById('rejectionCategory').value;
    const reason = document.getElementById('rejectionReason').value;
    
    if (!category || !reason) {
        alert('Please select a category and provide a detailed explanation');
        return;
    }

    try {
        const response = await fetch('/admin/handleReturn', {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                orderId: currentOrderId,
                action: 'rejected',
                category: category,
                message: reason
            })
        });

        const data = await response.json();
        
        if (data.success) {
            const modal = bootstrap.Modal.getInstance(document.getElementById('rejectModal'));
            modal.hide();
            Swal.fire(
                'Rejected!',
                'Return request has been rejected.',
                'success'
            ).then(() => {
                location.reload();
            });
        } else {
            throw new Error(data.message);
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire(
            'Error!',
            error.message || 'Failed to reject return request',
            'error'
        );
    }
}

async function updateReturnStatus(orderId) {
    const { value: status } = await Swal.fire({
        title: 'Update Return Status',
        input: 'select',
        inputOptions: {
            'returning': 'returning',
            'returned': 'returned'
        },
        inputPlaceholder: 'Select status',
        showCancelButton: true,
        inputValidator: (value) => {
            if (!value) {
                return 'You need to select a status!';
            }
        }
    });

    if (status) {
        try {
            const response = await fetch('/admin/updateReturnStatus', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ orderId, status }),
            });

            const data = await response.json();
            
            if (data.success) {
                await Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: 'Return status updated successfully',
                    timer: 1500
                });
                location.reload();
            } else {
                throw new Error(data.message);
            }
        } catch (error) {
            console.error('Error:', error);
            await Swal.fire({
                icon: 'error',
                title: 'Error',
                text: error.message || 'Failed to update status'
            });
        }
    }
}
</script>

<%- include("../partials/admin/footer") %>