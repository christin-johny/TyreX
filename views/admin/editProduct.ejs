<%- include("../partials/admin/sidebar") %>

<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css"
/>
<style>
  .error-message {
    color: red;
    font-size: 0.875rem;
    margin-top: 0.25rem;
  }

  .thumbnails-container {
    display: flex;
    overflow-x: auto;
    gap: 10px;
    padding: 10px 0;
  }

  .thumbnail {
    margin-right: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
    padding: 4px;
    max-width: 100px;
    max-height: 100px;
  }
  .input-upload {
   position: relative;
}

  
</style>

<section class="content-main">
  <div class="row">
    <div class="col-12">
      <div class="content-header mt-5 mb-3">
        <h2 class="content-title text-dark text-center">Edit Product</h2>
      </div>
    </div>
    <div class="col-12">
      <div class="card mb-4 h-100">
        <div class="card-body">
          <form method="post" action="/admin/editProduct/<%=product._id%>" enctype="multipart/form-data" onsubmit="return validateForm()">
            <div class="row">
              <div class="col-md-6">
                <div class="mb-4">
                  <label for="product_name" class="form-label text-dark">Product Name</label>
                  <input
                    type="text"
                    placeholder="Name"
                    name="productName"
                    class="form-control border"
                    id="productName"
                    value="<%=product.productName%>"
                  />
                  <div id="productName-error" class="error-message"></div>
                </div>
                <div class="mb-4">
                  <label class="form-label text-dark">Full description</label>
                  <textarea
                    placeholder="Description"
                    id="description"
                    name="description"
                    class="form-control border"
                    rows="4"
                  ><%=product.description%></textarea>
                  <div id="description-error" class="error-message"></div>
                </div>
                <div class="mb-4">
                  <label class="form-label text-dark">Product Number</label>
                  <input
                    type="text"
                    placeholder="Enter product number"
                    name="productNumber"
                    class="form-control border"
                    id="productNumber"
                    value="<%=product.productNumber%>"
                  />
                  <div id="productNumber-error" class="error-message"></div>
                </div>
              </div>
              <div class="col-md-6">
                <div class="card mb-4">
                  <div class="card-body">
                    <div class="row gx-2">
                      <div class="col-sm-6 mb-3">
                        <label class="form-label text-dark">Category</label>
                        <select
                          class="form-select border"
                          name="category"
                          id="category"
                          
                        >
                          <option value="" disabled selected>Select a Category</option>
                          <% for(let i=0; i<cat.length; i++) { %>
                            <option value="<%=cat[i].name%>"><%=cat[i].name%></option>
                          <% } %>
                        </select>
                        <div id="category-error" class="error-message"></div>
                      </div>
                      <div class="col-sm-6 mb-3">
                        <label class="form-label text-dark">Brand</label>
                        <select
                          class="form-select border"
                          name="brand"
                          id="brand"
                        >
                          <option value="" disabled selected>Select a Brand</option>
                          <% for(let i=0; i<brand.length; i++) { %>
                            <option value="<%=brand[i].brandName%>"><%=brand[i].brandName%></option>
                          <% } %>
                        </select>
                        <div id="brand-error" class="error-message"></div>
                      </div>
                      <div class="col-sm-6 mb-3">
                        <label class="form-label text-dark">Size</label>
                        <select
                          class="form-select border"
                          name="size"
                          id="size"
                        >
                          <option value="" disabled selected>Select Size</option>
                          <% for(let i=0; i<size.length; i++) { %>
                            <option value="<%=size[i].name%>"><%=size[i].name%></option>
                          <% } %>
                        </select>
                        <div id="size-error" class="error-message"></div>
                      </div>
                    </div>
                  </div>
                </div>
                <div class="row">
                  <div class="col-md-6">
                    <div class="mb-4">
                      <label class="form-label text-dark">Regular price</label>
                      <input
                        placeholder="₹"
                        name="regularPrice"
                        id="regularPrice"
                        type="text"
                        class="form-control border"
                        value="<%=product.regularPrice%>"
                      />
                      <div id="regularPrice-error" class="error-message"></div>
                    </div>
                  </div>
                  <div class="col-md-6">
                    <div class="mb-4">
                      <label class="form-label text-dark">Sale price</label>
                      <input
                        placeholder="₹"
                        name="salePrice"
                        id="salePrice"
                        type="text"
                        class="form-control border"
                        value="<%=product.salePrice%>"
                      />
                      <div id="salePrice-error" class="error-message"></div>
                    </div>
                  </div>
                  <div class="col-md-6">
                    <div class="mb-4">
                      <label class="form-label text-dark">Quantity</label>
                      <input
                        placeholder="No of items"
                        name="quantity"
                        id="quantity"
                        type="text"
                        class="form-control border"
                        value="<%=product.quantity%>"
                      />
                      <div id="quantity-error" class="error-message"></div>
                    </div>
                  </div>
                  <div class="col-md-6">
                    <div class="mb-4">
                      <label class="form-label text-dark">Warranty</label>
                      <input
                        placeholder="No of Months"
                        name="warranty"
                        id="warranty"
                        type="text"
                        class="form-control border"
                        value="<%=product.warranty%>"
                      />
                      <div id="warranty-error" class="error-message"></div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="card mb-3">
              <div class="card-header">
                  <h4 class="mb-0">Choose Images</h4>
              </div>
              <div class="card-body">
                  <div class="row">
                      <% for (let i = 0; i < product.productImage.length; i++) { %>
                      <div class="col-md-3 col-6 mb-3 position-relative">
                          <div class="border rounded p-2 text-center">
                              <input type="hidden" value="<%= product.productImage[i] %>" id="imageDatas">
                              <img class="rounded img-fluid" style="max-width: 100px; max-height: 100px;" 
                                   src="/uploads/reImage/<%= product.productImage[i] %>" alt="">
                              <i onclick="deleteSingleImage('<%= product.productImage[i] %>', '<%= product._id %>')" 
                                 class="fa fa-times text-danger position-absolute top-0 end-0 p-1" 
                                 style="cursor: pointer;"></i>
                          </div>
                      </div>
                      <% } %>
                  </div>
          
                  <div class="row">
                      <% for (let i = 1; i <= 4; i++) { %>
                      <div class="col-md-6">
                          <div class="mb-3">
                              <label for="input<%= i %>" class="form-label">Upload Image <%= i %></label>
                              <div class="text-center">
                                  <img src="" alt="" id="imgView<%= i %>" class="img-thumbnail mb-2" style="max-width: 120px; max-height: 120px;">
                              </div>
                              <input class="form-control" type="file" name="images" id="input<%= i %>" 
                                     accept="image/png, image/jpeg, image/jpg" 
                                     onchange="viewImage(event,'<%= i %>'), viewImage(event, '<%= i %>')">
                          </div>
                          <!-- <div class="image-cropper d-flex align-items-center justify-content-center bg-light p-2 rounded" 
                               style="display:none; width: 100%; max-width: 300px; height: 200px;">
                              <img src="" id="croppedImg<%= i %>" class="img-fluid rounded" alt="">
                              <button type="button" id="saveButton<%= i %>" class="btn btn-sm btn-primary ms-2">Save</button>
                          </div> -->
                      </div>
                      <% } %>
                  </div>
          
                  <div class="text-center">
                      <button class="btn btn-primary btn-md rounded font-sm hover-up" id="updatebtn" 
                              type="button" onclick="validateAndSubmit()">
                          Update
                      </button>
                  </div>
              </div>
          </div>
          
</section>

<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>

<script>
function validateAndSubmit() {
if (validateForm()) {
   document.forms[0].submit();
}
}

function viewImage1(event) {
           document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
       }


       function viewImage2(event) {
           document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
       }


       function viewImage3(event) {
           document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
       }


       function viewImage4(event) {
           document.getElementById('imgView4').src = URL.createObjectURL(event.target.files[0])
       }




       function viewImage(event, index) {
           let input = event.target;
           let reader = new FileReader();
           reader.onload = function () {
               let dataURL = reader.result;
               let image = document.getElementById('imgView' + index);
               image.src = dataURL;
               let cropper = new Cropper(image, {
                   aspectRatio: 1,
                   viewMode: 1,
                   guides: true,
                   background: false,
                   autoCropArea: 1,
                   zoomable: true
               });
               let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
               cropperContainer.style.display = 'block';
               let saveButton = document.querySelector('#saveButton' + index);
               saveButton.addEventListener('click', async function () {
                   let croppedCanvas = cropper.getCroppedCanvas();
                   let croppedImage = document.getElementById("croppedImg" + index);
                   croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
                   let timestamp = new Date().getTime();
                   let fileName = `cropped-img-${timestamp}-${index}.png`;
                   await croppedCanvas.toBlob(blob => {
                       let input = document.getElementById('input' + index);
                       let imgFile = new File([blob], fileName, blob)
                       const fileList = new DataTransfer();
                       fileList.items.add(imgFile);
                       input.files = fileList.files
                   });
                   cropperContainer.style.display = 'none';
               });
           };
           reader.readAsDataURL(input.files[0]);
       }


       const selectedImages = [];
   document.getElementById("imageInput").addEventListener("change", handleFileSelect);


       function handleFileSelect(event) {
           const addedImagesContainer = document.getElementById("addedImagesContainer");
           addedImagesContainer.innerHTML = "";
           const files = event.target.files;
           for (let i = 0; i < files.length; i++) {
               const file = files[i];
               selectedImages.push(file);
               const thumbnail = document.createElement("div");
               thumbnail.classList.add("thumbnail");
               const img = document.createElement("img");
               img.src = URL.createObjectURL(file);
               img.alt = "thumbnail";
               img.style.width = "50px";
               img.style.height = "auto";
               const removeIcon = document.createElement("span");
               removeIcon.classList.add("remove-icon");
               removeIcon.innerHTML = "&times;";
               removeIcon.addEventListener("click", function () {
                   const index = selectedImages.indexOf(file);
                   if (index !== -1) {
                       selectedImages.splice(index, 1);
                   }
                   thumbnail.remove();
               });
               thumbnail.appendChild(img);
               thumbnail.appendChild(removeIcon);
               addedImagesContainer.appendChild(thumbnail);
           }

    }
    

     function validateForm(){
          clearErrorMessages();
          const name=document.getElementById('productName').value;
          const description=document.getElementById('description').value;
          const number = document.getElementById('productNumber').value;
          const category=document.getElementById('category').value;
          const brand= document.getElementById('brand').value;
          const size = document.getElementById('size').value;
          const regularPrice=document.getElementById('regularPrice').value;
          const salePrice=document.getElementById('salePrice').value;
          const warranty= document.getElementById('warranty').value;
          const quantity= document.getElementById('quantity').value;
          const images = document.getElementById('input1')
    
    
          let isValid=true;
    
          const nameregex=/^[a-zA-Z][a-zA-Z0-9\/\-\s]*$/;
          if(name.trim()===''){
            displayErrorMessage('productName-error', "Product name can't be empty")
            isValid=false;
          }else if(!nameregex.test(name)){
            displayErrorMessage('productName-error', "enter a valid product name ")
            isValid=false
          }
    
          const descriptionregex=/^[A-Za-z].*/
          ;
          if(description.trim()===''){
            displayErrorMessage('description-error', "Description can't be empty")
            isValid=false;
          }else if(!descriptionregex.test(description)){
            displayErrorMessage('description-error', "Enter a valid description")
            isValid=false;
          }
    
          if(number.trim()===''){
            displayErrorMessage('productNumber-error', "Product number can't be empty")
            isValid=false;
          }else if(!/^[0-9/-]+$/.test(number)){
            displayErrorMessage('productNumber-error', "Enter a valid Product number")
            isValid=false;
          }
    
          if (category.trim()==='') {
            displayErrorMessage('category-error', "Please select a category")
            isValid=false;
          }
    
          if (brand.trim()==='') {
            displayErrorMessage('brand-error', "Please select a brand")
            isValid=false;
          }
    
          if (size.trim()==='') {
            displayErrorMessage('size-error', "Please select a size")
            isValid=false;
          }
    
          if(regularPrice.trim()===''|| !/^\d+(\.\d{1,2})?$/.test(regularPrice)){
            displayErrorMessage('regularPrice-error', "Please enter a valid non-negative price.")
            isValid=false;
          }
    
          if(salePrice.trim()===''|| !/^\d+(\.\d{1,2})?$/.test(salePrice)){
            displayErrorMessage('salePrice-error', "Please enter a valid non-negative price.")
            isValid=false;
          }else if(parseFloat(regularPrice)<parseFloat(salePrice)){
            displayErrorMessage('salePrice-error', "Sale price can't be greater than Regular price")
            isValid=false;
          }
          
          if(quantity.trim()===''|| !/^\d+$/.test(quantity)){
            displayErrorMessage('quantity-error', "Please enter a valid number as quantity")
            isValid=false;
          }
    
          if(warranty.trim()===''|| !/^\d+$/.test(warranty)){
            displayErrorMessage('warranty-error', "Please enter a valid number of months")
            isValid=false;
          }
        //   if (images.files.length === 0) {
        //     displayErrorMessage("images-error",'Please select an image.');
        //     isValid = false;
        // }
    
          return isValid;
     }

     function displayErrorMessage(elementId, message) {
        var errorElement = document.getElementById(elementId);
        errorElement.innerText = message;
        errorElement.style.display = "block";
    }
    
    function clearErrorMessages() {
        const errorElements = document.getElementsByClassName('error-message');
        Array.from(errorElements).forEach(element => {
            element.innerText = '';
        });
        const errorMessage = document.getElementById('errorMessage');
    }

    function deleteSingleImage(imageId,productId){
      $.ajax({
        url:'/admin/deleteImage',
        method:'post',
        data:{imageNameToServer:imageId,ProductIdToServer:productId},
        success:((response)=>{
          if(response.status===true){
            window.location.reload();
          }
        })
      })
    }
</script>

<%- include("../partials/admin/footer") %>
