<!DOCTYPE html>
<%- include("../partials/admin/header") %>

<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">
<style>
  .error-message {
    color: red;
    font-size: 0.875rem;
    margin-top: 0.25rem;
  }

  .thumbnails-container {
    display: flex;
    overflow-x: auto;
    gap: 10px;
    padding: 10px 0;
  }

  .thumbnail {
    margin-right: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
    padding: 4px;
    max-width: 100px;
    max-height: 100px;
  }

  .image-cropper {
    display: none;
    width: 100%;
    max-width: 300px;
    height: auto;
    margin: 10px 0;
    flex-direction: column;
    align-items: center;
    gap: 10px;
  }

  .image-cropper img {
    max-width: 100%;
    height: auto;
    border-radius: 4px;
  }

  .image-cropper button {
    margin-top: 10px;
  }
</style>

<section class="content-main">
  <div class="row">
    <div class="col-12">
      <div class="content-header mt-5 mb-3">
        <h2 class="content-title text-dark text-center">Add New Product</h2>
      </div>
    </div>
    <div class="col-12">
      <div class="card mb-4 h-100">
        <div class="card-body">
          <form method="POST" action="/admin/addProduct" enctype="multipart/form-data" onsubmit="return validateForm()">

            <div class="row">
              <div class="col-md-6">
                <div class="mb-4">
                  <label for="product_name" class="form-label text-dark">Product Name</label>
                  <input
                    type="text"
                    placeholder="Name"
                    name="productName"
                    class="form-control border"
                    id="productName"
                  />
                  <div id="productName-error" class="error-message"></div>
                </div>
                <div class="mb-4">
                  <label class="form-label text-dark">Full description</label>
                  <textarea
                    placeholder="Description"
                    id="description"
                    name="description"
                    class="form-control border"
                    rows="4"
                  ></textarea>
                  <div id="description-error" class="error-message"></div>
                </div>
                <div class="mb-4">
                  <label class="form-label text-dark">Product Number</label>
                  <input
                    type="text"
                    placeholder="Enter product number"
                    name="productNumber"
                    class="form-control border"
                    id="productNumber"
                  />
                  <div id="productNumber-error" class="error-message"></div>
                </div>
              </div>
              <div class="col-md-6">
                <div class="card mb-4">
                  <div class="card-body">
                    <div class="row gx-2">
                      <div class="col-sm-6 mb-3">
                        <label class="form-label text-dark">Category</label>
                        <select
                          class="form-select border"
                          name="category"
                          id="category"
                        >
                          <option value="" disabled selected>Select a Category</option>
                          <% for(let i=0; i<cat.length; i++) { %>
                            <option value="<%=cat[i].name%>"><%=cat[i].name%></option>
                          <% } %>
                        </select>
                        <div id="category-error" class="error-message"></div>
                      </div>
                      <div class="col-sm-6 mb-3">
                        <label class="form-label text-dark">Brand</label>
                        <select
                          class="form-select border"
                          name="brand"
                          id="brand"
                        >
                          <option value="" disabled selected>Select a Brand</option>
                          <% for(let i=0; i<brand.length; i++) { %>
                            <option value="<%=brand[i].brandName%>"><%=brand[i].brandName%></option>
                          <% } %>
                        </select>
                        <div id="brand-error" class="error-message"></div>
                      </div>
                      <div class="col-sm-6 mb-3">
                        <label class="form-label text-dark">Size</label>
                        <select
                          class="form-select border"
                          name="size"
                          id="size"
                        >
                          <option value="" disabled selected>Select Size</option>
                          <% for(let i=0; i<size.length; i++) { %>
                            <option value="<%=size[i].name%>"><%=size[i].name%></option>
                          <% } %>
                        </select>
                        <div id="size-error" class="error-message"></div>
                      </div>
                    </div>
                  </div>
                </div>
                <div class="row">
                  <div class="col-md-6">
                    <div class="mb-4">
                      <label class="form-label text-dark">Regular price</label>
                      <input
                        placeholder="â‚¹"
                        name="regularPrice"
                        id="regularPrice"
                        type="text"
                        class="form-control border"
                      />
                      <div id="regularPrice-error" class="error-message"></div>
                    </div>
                  </div>
                  
                  <div class="col-md-6">
                    <div class="mb-4">
                      <label class="form-label text-dark">Quantity</label>
                      <input
                        placeholder="No of items"
                        name="quantity"
                        id="quantity"
                        type="text"
                        class="form-control border"
                      />
                      <div id="quantity-error" class="error-message"></div>
                    </div>
                  </div>
                  <div class="col-md-6">
                    <div class="mb-4">
                      <label class="form-label text-dark">Warranty</label>
                      <input
                        placeholder="No of Months"
                        name="warranty"
                        id="warranty"
                        type="text"
                        class="form-control border"
                      />
                      <div id="warranty-error" class="error-message"></div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="card mb-1 p-2">
              <div class="card-header">
                <h5>Choose Images</h5>
              </div>
              <div class="border row p-2">
                <div id="addedImagesContainer" class="thumbnails-container"></div>
              </div>
              <div class="row">
                <% for (let i = 1; i <= 4; i++) { %>
                  <div class="col-md-3">
                    <div class="card-body p-2 d-flex flex-column align-items-center">
                      <img src="" id="imgView<%= i %>" 
                           style="max-width: 100px; max-height: 100px;" />
                      <input class="form-control form-control-sm imageInputs" type="file" 
                             name="images" id="input<%= i %>"
                             accept="image/png, image/jpeg, image/jpg" 
                             onchange="viewImage(event, '<%= i %>')" />
                    </div>
                    <div class="image-cropper d-flex flex-column align-items-center" id="cropperContainer<%= i %>"
                         style="display: none; width: 200px; height: 200px;">
                      <img id="croppedImg<%= i %>"  
                           style="width: 100px; height: 100px;" />
                      <button type="button" id="saveButton<%= i %>" class="btn btn-sm btn-primary mt-2">Save</button>
                    </div>
                  </div>
                <% } %>
                <!-- Add the missing error message element -->
                <div class="col-12">
                  <div id="images-error" class="error-message"></div>
                </div>
              </div>
              
              <div class="text-center mt-4">
                <button class="btn btn-md rounded font-sm hover-up btn-primary" type="button" onclick="validateAndSubmit()">
                  Publish
                </button>
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</section>

<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

<script>
function validateAndSubmit() {
  if (validateForm()) {
    fetch('/admin/addProduct', {
      method: 'POST',
      body: new FormData(document.forms[0]),
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        Swal.fire({
          icon: 'success',
          title: 'Success',
          text: 'Product added successfully!',
          confirmButtonColor: '#3085d6',
          confirmButtonText: 'OK'
        }).then(() => {
          window.location.href = "/admin/products";
        });
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: data.message || 'Something went wrong!',
          confirmButtonColor: '#d33',
          confirmButtonText: 'Try Again'
        });
      }
    })
    .catch(error => {
      Swal.fire({
        icon: 'error',
        title: 'Server Error',
        text: 'An error occurred while adding the product.',
        confirmButtonColor: '#d33',
        confirmButtonText: 'Try Again'
      });
    });  
  }
}

let cropperInstances = {}; 

function viewImage(event, index) {
  let input = event.target;
  let reader = new FileReader();

  reader.onload = function () {
    let dataURL = reader.result;
    let image = document.getElementById(`imgView${index}`);
    image.src = dataURL;

    if (cropperInstances[index]) {
      cropperInstances[index].destroy();
    }

    let cropper = new Cropper(image, {
      aspectRatio: NaN,
      viewMode: 1,
      guides: true,
      background: false,
      autoCropArea: 1,
      zoomable: true
    });

    cropperInstances[index] = cropper;

    let cropperContainer = document.getElementById(`cropperContainer${index}`);
    cropperContainer.style.display = 'block';

    let saveButton = document.getElementById(`saveButton${index}`);

    saveButton.replaceWith(saveButton.cloneNode(true));
    saveButton = document.getElementById(`saveButton${index}`);

    saveButton.addEventListener('click', async function () {
      let croppingCanvas = cropper.getCroppedCanvas();
      let croppedImage = document.getElementById(`croppedImg${index}`);
      croppedImage.src = croppingCanvas.toDataURL('image/jpeg', 1.0);

      let timestamp = new Date().getTime();
      let fileName = `cropped-img-${timestamp}-${index}.png`;

      croppingCanvas.toBlob(blob => {
        let imgFile = new File([blob], fileName, { type: "image/png" });

        let inputField = document.getElementById(`input${index}`);
        if (inputField) {
          const fileList = new DataTransfer();
          fileList.items.add(imgFile);
          inputField.files = fileList.files;
        }
      });

      cropperContainer.style.display = 'none';
    });
  };

  reader.readAsDataURL(input.files[0]);
}

function validateForm() {
  clearErrorMessages();
  const name = document.getElementById('productName').value;
  const description = document.getElementById('description').value;
  const number = document.getElementById('productNumber').value;
  const category = document.getElementById('category').value;
  const brand = document.getElementById('brand').value;
  const size = document.getElementById('size').value;
  const regularPrice = document.getElementById('regularPrice').value;
  const warranty = document.getElementById('warranty').value;
  const quantity = document.getElementById('quantity').value;
  const images = document.getElementById('input1');

  let isValid = true;

  const nameregex = /^[a-zA-Z][a-zA-Z0-9\/\-\s]*$/;
  if (name.trim() === '') {
    displayErrorMessage('productName-error', "Product name can't be empty");
    isValid = false;
  } else if (!nameregex.test(name)) {
    displayErrorMessage('productName-error', "Enter a valid product name");
    isValid = false;
  }

  const descriptionregex = /^[A-Za-z].*/;
  if (description.trim() === '') {
    displayErrorMessage('description-error', "Description can't be empty");
    isValid = false;
  } else if (!descriptionregex.test(description)) {
    displayErrorMessage('description-error', "Enter a valid description");
    isValid = false;
  }

  if (number.trim() === '') {
    displayErrorMessage('productNumber-error', "Product number can't be empty");
    isValid = false;
  } else if (!/^[0-9/-]+$/.test(number)) {
    displayErrorMessage('productNumber-error', "Enter a valid Product number");
    isValid = false;
  }

  if (category.trim() === '') {
    displayErrorMessage('category-error', "Please select a category");
    isValid = false;
  }

  if (brand.trim() === '') {
    displayErrorMessage('brand-error', "Please select a brand");
    isValid = false;
  }

  if (size.trim() === '') {
    displayErrorMessage('size-error', "Please select a size");
    isValid = false;
  }

  if (regularPrice.trim() === '' || !/^\d+(\.\d{1,2})?$/.test(regularPrice)) {
    displayErrorMessage('regularPrice-error', "Please enter a valid non-negative price.");
    isValid = false;
  }

  if (quantity.trim() === '' || !/^\d+$/.test(quantity)) {
    displayErrorMessage('quantity-error', "Please enter a valid number as quantity");
    isValid = false;
  }

  if (warranty.trim() === '' || !/^\d+$/.test(warranty)) {
    displayErrorMessage('warranty-error', "Please enter a valid number of months");
    isValid = false;
  }

  // Validate images
  if (images.files.length === 0) {
    displayErrorMessage("images-error", "Please select an image.");
    isValid = false;
  }

  return isValid;
}

function displayErrorMessage(elementId, message) {
  var errorElement = document.getElementById(elementId);
  errorElement.innerText = message;
  errorElement.style.display = "block";
}

function clearErrorMessages() {
  const errorElements = document.getElementsByClassName('error-message');
  Array.from(errorElements).forEach(element => {
    element.innerText = '';
  });
  const errorMessage = document.getElementById('errorMessage');
}
</script>

<%- include("../partials/admin/footer") %>